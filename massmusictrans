#!/bin/bash

LOGF="/video/Incoming/logs/musictranscoder.log"
INDEXFIL="/video/Incoming/logs/musictranscoder.idx"
TRANSDIR="/TRANSCODE"

if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
        echo " "
        echo "Galaxy Media Tools - Automatic Music Transcoder/ID/Rename/Move/Sort"
        echo " "
        echo "massmusictrans [-h] [-d] [-s] [-nid]"
	echo " "
	echo "-h or --help : Help"
        echo "-s  : Simulate only. Dont apply changes"
        echo "-nid : DO NOT run Beets music Identification (Transcode only)"
        echo "-a  : DO NOT have Beets prompt for changes (Automatic mode)"
        echo "-d  : Use current directory for base of search (instead of /music/process/unsorted)"
        echo " "
        exit 0
fi

if [ "$1" == "-s" ] || [ "$2" == "-s" ] || [ "$3" == "-s" ] || [ "$4" == "-s" ] ; then SIM="yes"; fi
if [ "$1" == "-nid" ] || [ "$2" == "-nid" ] || [ "$3" == "-nid" ] || [ "$4" == "-nid" ] ; then BID="no"; fi
if [ "$1" == "-a" ] || [ "$2" == "-a" ] || [ "$3" == "-a" ] || [ "$4" == "-a" ] ; then BAUTO="yes"; fi

if [ "$1" != "-d" ] && [ "$2" != "-d" ] && [ "$3" != "-d" ] && [ "$4" != "-d" ]; then
SOURCEDIR="/music/process/unsorted"
chmod ugo+rwx /music/process -R
else
SOURCEDIR=`pwd`
fi

source "/opt/galaxymediatools/functions/prechecknl"

log "INFO" "---> Starting Mass Music Transcoder on $HOSTNAME"
starttimer

if [ -f "$INDEXFIL" ]; then rm -f $INDEXFIL; fi

log "INFO" "Using directory $SOURCEDIR as base for music search."
starttimer2
if [ "$TRANSDIR" == "" ];then
log "ERROR" "ERROR! TRANSDIR is null. Exiting."
exit 1
fi
log "INFO" "Building index of files to process on $THISSERVER"
echo "Building index of files to process..."

#-type f \( -name "*cache" -o -name "*xml" -o -name "*html" \)
find $SOURCEDIR -type f -name "._*" -exec rm -rf {} \; 

find $SOURCEDIR -type f \( -name "*.flac" -o -name "*.FLAC"  -o -name "*.Flac" -o -name "*.m4a"  -o -name "*.M4a"  -o -name "*.M4A" \) >> $INDEXFIL
i=0
while read sfile
do
    if [[ -f $sfile ]]; then
        file[$i]=$sfile
        i=$(($i+1))
    fi
done < $INDEXFIL
ELAPSED2=$(elapsed2)
log "INFO" "File index build complete. Elapsed: $ELAPSED2"
NODEAL=`find "$SOURCEDIR" -type f \( -name "*.mp4" -o -name "*.Mp4" -o -name "*.MP4" \) | wc -l`
if [ $NODEAL -ne 0 ]; then
echo "mp4 files found. Deal with this first!!"
find "$SOURCEDIR" -type f \( -name "*.mp4" -o -name "*.Mp4" -o -name "*.MP4" \)
log "ERROR" "mp4 files found. Deal with this first!!"
exit 1
fi
log "INFO" "Starting transcode process on ${#file[@]} files on $HOSTNAME"
echo "Starting transcode process on ${#file[@]} files"
###pushover "transcoder" "Music Transcoder Starting in $TMODE on $HOSTNAME - ${#file[@]} Files to process"
j=0
starttimer2
for f in "${file[@]}"; do
 starttimer2
 fil=${f##*/}
 EXT=${f: -3}
 transc=`echo "$f" | cut -d "." -f3`
 transd=`echo "$f" | cut -d "." -f2`
 OSIZE=$(wc -c "$f" | cut -f 1 -d ' ')
 fne="${f%.*}"
 fng="${fne##*/}"
 fleft=$((${#file[@]}-$j))
 echo "Copying file to local drive for transcoding on $fne..."
 log "INFO" "Copying file to local drive for transcoding on $THISSERVER $fne"
 starttimer3
 if [[ -z $SIM ]]; then cp -f "$f" "$TRANSDIR"; fi
 ELAPSED3=$(elapsed3)
 log "INFO" "Copy file to local drive for transcoding complete. Elapsed: $ELAPSED3"
 starttimer3
 log "INFO" "Processing audio file on $THISSERVER - $fil"
 echo "*Processing audio file - $fil..."

if [[ -z $SIM ]]; then

  if [ $EXT == "m4a" ] || [ $EXT == "M4a" ] || [ $EXT == "M4A" ]; then
  log "INFO" "m4a file detected, converting to wav first..."
  if [[ -z $BAUTO ]]; then
   /usr/bin/faad "$TRANSDIR/$fil" -d -o "$TRANSDIR/$fng.wav"
  else
   /usr/bin/faad "$TRANSDIR/$fil" -d -q -o "$TRANSDIR/$fng.wav" &>> $LOGF
  fi
  log "INFO" "wav converion complete, deleting original..."
  rm -f "$TRANSDIR/$fil"
  fil="$fng.wav"
  fi

 if [[ -z $BAUTO ]]; then
 lamesw="-V 2 -q 0 -S --brief"
 nice -n -10 /usr/bin/lame $lamesw "$TRANSDIR/$fil" "$TRANSDIR/$fng.mp3"
 else
 lamesw="-V 2 -q 0 -S" 
 nice -n -10 /usr/bin/lame $lamesw "$TRANSDIR/$fil" "$TRANSDIR/$fng.mp3" &>> $LOGF
 fi
fi
  if [ "$?" != "0" ]; then
   log "ERROR" "Error transcoding audio file $fil. Exiting."
   exit 1
  fi
  ELAPSED3=$(elapsed3)
   log "INFO" "Audio transcode completed successfully on $THISSERVER- Replacing original $fil. Elapsed: $ELAPSED3"
   log "INFO" "Moving transcoded file back to filer on $THISSERVER - $fng.trans.mp4"
   echo "Audio transcode completed successfully. Replacing original $fil. Elapsed: $ELAPSED3"
   if [[ -z $SIM ]]; then
    rm -f "$f"
    mv -f "$TRANSDIR/$fng.mp3" "$fne.mp3"
    rm -f "$TRANSDIR/$fil"
   fi 
done

ELAPSED2=$(elapsed2)

if [[ -z $BID ]]; then
log "INFO" "All music transcoding complete.  Continuing to music identification. Elapsed: $ELAPSED2"
   starttimer3
   log "INFO" "Running Beets music organizer..."


 if [[ $BAUTO ]]; then
   beet -c /opt/galaxymediatools/conf/beetsconfignc.yaml import -q $SOURCEDIR &>> $LOGF
 else
   beet -c /opt/galaxymediatools/conf/beetsconfig.yaml import $SOURCEDIR 
 fi
 
 if [ "$?" != "0" ]; then
    ELAPSED3=$(elapsed3)
    log "ERROR" "Beets DID NOT complete successfully.  Check Log. Elapsed: $ELAPSED3"
 else
    ELAPSED3=$(elapsed3)
    log "INFO" "Beets completed successfully. Elapsed: $ELAPSED3"    
  if [[ $BAUTO ]]; then
    log "INFO" "Moving remaining files to /music/process/failed_id for further examination"
    starttimer3
    sync
    mv -f "$SOURCEDIR/*" "/music/process/failed_id"
    ELAPSED3=$(elapsed3)
    log "INFO" "Remaining files moved to /music/process/failed_id. Elapsed: $ELAPSED3"
  else
    read -r -p "Move all id failed files to /music/process/failed_id? [y/N] " response
    response=${response,,}    # tolower
    if [[ $response =~ ^(yes|y)$ ]]; then
     log "INFO" "Moving remaining files to /music/process/failed_id for further examination"
     starttimer3
     sync
     mv -f "$SOURCEDIR/*" "/music/process/failed_id"
     ELAPSED3=$(elapsed3)
     log "INFO" "Remaining files moved to /music/process/failed_id. Elapsed: $ELAPSED3"
    else
     log "WARN" "NOT moving remaining files to /music/process/failed_id"
    fi
  fi
 fi
else
log "INFO" "Skipping music identification due to command line option -nid. Elapsed: $ELAPSED2"
fi
sync
ELAPSED=$(elapsed)
log "INFO" "<--- Completed Music Transcoder script on $HOSTNAME. Elapsed: $ELAPSED"
