#!/bin/bash

LOGF="/video/Incoming/logs/expiredtv.log"

source "/opt/galaxymediatools/functions/prechecknl"

# Keep 14 days worth
TV7DAY[0]="/video/TV Series/Vice News Tonight"
#TV7DAY[1]="/video/Recorded TV/Jimmy Kimmel Live (2003)"
#TV7DAY[2]="/video/Recorded TV/The Tonight Show Starring Jimmy Fallon (2014)"

# keep 1 day worth
TV1DAY[0]="/notarealdir"
#TV1DAY[1]="/video/Recorded TV/Local 4 News at 6 (2005)"
#TV1DAY[2]="/video/Recorded TV/Local 4 News at 11 (2005)"

# begin script
starttimer
log "INFO" "---> Starting TV episode expire check script"

log "INFO" "Checking for expired episodes..."

#find "$TV1" -type f -printf "%-.22T+ %M %n %-8u %-8g %8s %Tx %.8TX %p\n" | sort | cut -f 2- -d ' ' 
starttimer2
for TV in "${TV7DAY[@]}"
do
EPS1=`find "$TV" -type f -mtime +8 | wc -l`
EPS=$((EPS+EPS1))
done

for TV in "${TV1DAY[@]}"
do
EPS1=`find "$TV" -type f -mtime +0 | wc -l`
EPS=$((EPS+EPS1))
done

ELAPSED2=$(elapsed2)
log "INFO" "Found $EPS expired TV episodes. Elapsed: $ELAPSED2"

if [ $EPS -ne 0 ]; then
log "INFO" "Removing $EPS expired TV episodes..."
starttimer2
for TV in "${TV7DAY[@]}"
do
find "$TV" -type f -mtime +8 -exec rm -rf {} \; &>> $LOGF
done

for TV in "${TV1DAY[@]}"
do
find "$TV" -type f -mtime +0 -exec rm -rf {} \; &>> $LOGF
done
ELAPSED2=$(elapsed2)
log "INFO" "Removed $EPS expired TV episodes. Elapsed: $ELAPSED2"
log "INFO" "Updating plex libraries"


/usr/bin/curl "http://172.25.1.26:32400/library/sections/$PLEXRCAT/refresh?X-Plex-Token=$PLEXTOKEN"
sleep 10
/usr/bin/curl "http://172.25.1.26:32400/library/sections/$PLEXCAT/refresh?X-Plex-Token=$PLEXTOKEN"
else
ELAPSED2=$(elapsed2)
log "INFO" "No expired TV episodes to remove. Elapsed: $ELAPSED2"
fi

ELAPSED=$(elapsed)
pushover "transcoder" "TV episode expire check complete. $EPS Episodes removed. Elapsed: $ELAPSED" &> /dev/null

log "INFO" "<--- Complete TV episode experation check. Elapsed: $ELAPSED"

exit 0
